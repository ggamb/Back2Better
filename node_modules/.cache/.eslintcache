[{"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\index.tsx":"1","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\reportWebVitals.ts":"2","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\App.tsx":"3","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\pages\\NoMatch.tsx":"4","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Home\\index.tsx":"5","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Nav\\index.tsx":"6","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Green\\index.tsx":"7","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Yellow\\index.tsx":"8","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Blue\\index.tsx":"9","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Red\\index.tsx":"10","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Orange\\index.tsx":"11"},{"size":554,"mtime":1650991035384,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1650991035385,"results":"14","hashOfConfig":"13"},{"size":1291,"mtime":1650999155226,"results":"15","hashOfConfig":"13"},{"size":299,"mtime":1650999117374,"results":"16","hashOfConfig":"13"},{"size":4396,"mtime":1651007640561,"results":"17","hashOfConfig":"13"},{"size":1390,"mtime":1651005338895,"results":"18","hashOfConfig":"13"},{"size":83,"mtime":1650991035380,"results":"19","hashOfConfig":"13"},{"size":86,"mtime":1650991035384,"results":"20","hashOfConfig":"13"},{"size":82,"mtime":1650991035380,"results":"21","hashOfConfig":"13"},{"size":77,"mtime":1650991035382,"results":"22","hashOfConfig":"13"},{"size":86,"mtime":1650991035382,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16bnvmy",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\index.tsx",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\reportWebVitals.ts",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\App.tsx",["60","61","62","63"],[],"import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useRoutes } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Green from './components/Green';\nimport Yellow from './components/Yellow';\nimport Red from './components/Red';\nimport Blue from './components/Blue';\nimport Orange from './components/Orange';\nimport Silver from './components/Silver';\nimport NoMatch from './pages/NoMatch'\n\nfunction App() {\n  \n\n  const App = () => {\n    \n      let routes = useRoutes([\n      {path: '*', element: <NoMatch/>},\n      {path: '/', element: <Home/>},\n      {path: \"/home\", element: <Home /> },\n      {path : '/green', element : <Green/> },\n      {path : '/GR', element : <Green/> },\n      {path : '/red', element : <Red/> },\n      {path : '/RD', element : <Red/> },\n      {path : '/yellow', element : <Yellow/> },\n      {path : '/YL', element : <Yellow/> },\n      {path : '/blue', element : <Blue/> },\n      {path : '/BL', element : <Blue/> },\n      {path : '/orange', element : <Orange/> },\n      {path : '/OR', element : <Orange/> },\n      ]);\n\n      return routes;\n  }\n\n\n  return (\n    <Router>\n      <Nav />\n      <App />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\pages\\NoMatch.tsx",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Home\\index.tsx",["64","65"],[],"import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nfunction Home() {\n    \n    interface LineInfo {\n        lineCode: string;\n        maximumTrainDelay: number;\n        averageTrainFrequency: number;\n        expectedTrainFrequency: number;\n        averagePlatformWaitTime: number;\n        platformWaitTimeTrendStatus: string;\n        numTrains: number;\n        trainFrequencyStatus: string;\n    }\n\n    let [metroLineData, setMetroLineData] = useState<LineInfo[]>([]);\n\n    const apiKey = process.env.REACT_APP_METROHERO;\n    \n\n    const metroHeroMetrics = `https://dcmetrohero.com/api/v1/metrorail/metrics`;\n\n    const requestHeaders: any = new Headers();\n    requestHeaders.set('Content-Type', 'application/json');\n    requestHeaders.set('Access-Control-Allow-Origin', '*');\n    requestHeaders.set('Access-Control-Allow-Headers', 'Content-Type, Access-Control-Allow-Headers, X-Requested-With');\n    requestHeaders.set('apiKey', apiKey);\n\n    async function getHomeInfo() {\n        try {\n            let response : any = await fetch(metroHeroMetrics, {\n                headers:  requestHeaders\n            });\n\n            if(!response.ok) {\n                throw new Error('API failure');\n            }\n\n            let lineDataComplete : any = await response.json();\n\n            let lineData : any = lineDataComplete.lineMetricsByLine;\n\n            let lineArray = [];          \n\n            for(let [key, value] of Object.entries(lineData)) {\n\n                let lineArrayEntry : any = value;\n\n                lineArray.push(lineArrayEntry);\n            }\n\n            console.log(lineArray)\n\n            setMetroLineData(lineArray);\n\n        }  catch (err) {\n            console.log(err)\n        }\n    }\n\n    const toMinutes = (time : number) => {   \n        // Hours, minutes and seconds\n        var hrs = ~~(time / 3600);\n        var mins = ~~((time % 3600) / 60);\n        var secs = ~~time % 60;\n    \n        // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n        var ret = \"\";\n        if (hrs > 0) {\n            ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n        }\n        ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n        ret += \"\" + secs;\n        return ret;\n    }\n\n    useEffect(() => {\n        getHomeInfo();\n    }, [])\n\n\n\n    return (\n        <>\n        {\n            metroLineData.length ? (\n                    <>\n                    {metroLineData.map(line => (\n                        <>\n                        <Card variant = 'outlined'>\n                            <>\n                            <CardContent>\n                                <Typography sx={{ fontSize: 30 }} color=\"text.secondary\" gutterBottom>\n                                {line.lineCode}\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"div\">\n                                    Line status: {line.trainFrequencyStatus}<br/>\n                                    Average train frequency: {line.averageTrainFrequency.toFixed(2)} minutes<br/>\n                                    Expected train frequency: {line.expectedTrainFrequency.toFixed(2)} minutes<br/>\n                                    Average wait time: {line.averagePlatformWaitTime.toFixed(2)} minutes<br/>\n                                    Max delay: {toMinutes(line.maximumTrainDelay)} <br/>\n                                    Time trend: {line.platformWaitTimeTrendStatus}<br/>\n                                    Trains on line: {line.numTrains}<br/>\n                                    </Typography>\n                                </CardContent>\n                            <CardActions>\n                                <Button size=\"small\"><Link to={line.lineCode}>Go to live {line.lineCode} Line</Link></Button>\n                            </CardActions>\n                            </>\n                        </Card>\n                        </>\n                    ))}\n                    </>\n                \n                \n            ) : \n            (\n                <h2>Loading Metro data</h2>\n            )\n        }\n        </>\n        \n    )\n}\n\nexport default Home;","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Nav\\index.tsx",["66","67","68","69","70","71","72"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Green from '../Green';\nimport Yellow from '../Yellow';\nimport Red from '../Red';\nimport Blue from '../Blue';\nimport Orange from '../Orange';\nimport Silver from '../Silver';\nimport Home from '../Home';\n\n\nfunction Nav() {\n  const stationsList = [\n    { name: '', \n      display: 'Home'\n    },\n    {\n      name: 'red',\n      display: 'Red'\n    },\n    {\n      name: 'green',\n      display: 'Green'\n    },\n    {\n      name: 'yellow',\n      display: 'Yellow'\n    },\n    {\n      name: 'blue',\n      display: 'Blue'\n    },\n    {\n      name: 'orange',\n      display: 'Orange'\n    },\n    {\n      name: 'silver',\n      display: 'Silver'\n    },\n  ]\n\n\n  function showNavigation()  {\n      return (\n        <div >\n          <ul className=\"flex-row\">\n            {stationsList.map(station => (\n              <li key = {station.name} className = \"nav-list\">\n                <Link to={`/${station.name}`} >\n                  {station.display}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n  }\n\n  return (\n    <header className=\"flex-row\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"Back2Better Logo - metro emoji\">🚇</span>\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Green\\index.tsx",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Yellow\\index.tsx",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Blue\\index.tsx",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Red\\index.tsx",[],[],"C:\\Users\\glenn\\Desktop\\Back2Better\\src\\components\\Orange\\index.tsx",[],[],{"ruleId":"73","severity":1,"message":"74","line":2,"column":35,"nodeType":"75","messageId":"76","endLine":2,"endColumn":40},{"ruleId":"73","severity":1,"message":"77","line":2,"column":42,"nodeType":"75","messageId":"76","endLine":2,"endColumn":48},{"ruleId":"73","severity":1,"message":"78","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":12},{"ruleId":"73","severity":1,"message":"79","line":13,"column":8,"nodeType":"75","messageId":"76","endLine":13,"endColumn":14},{"ruleId":"73","severity":1,"message":"80","line":51,"column":22,"nodeType":"75","messageId":"76","endLine":51,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":85,"column":8,"nodeType":"83","endLine":85,"endColumn":10,"suggestions":"84"},{"ruleId":"73","severity":1,"message":"85","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},{"ruleId":"73","severity":1,"message":"86","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"87","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":11},{"ruleId":"73","severity":1,"message":"88","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":12},{"ruleId":"73","severity":1,"message":"89","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":14},{"ruleId":"73","severity":1,"message":"90","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":12},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'logo' is defined but never used.","'Silver' is defined but never used.","'key' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHomeInfo'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'Green' is defined but never used.","'Yellow' is defined but never used.","'Red' is defined but never used.","'Blue' is defined but never used.","'Orange' is defined but never used.","'Home' is defined but never used.",{"desc":"92","fix":"93"},"Update the dependencies array to be: [getHomeInfo]",{"range":"94","text":"95"},[2519,2521],"[getHomeInfo]"]